import streamlit as st
from PIL import Image
import pytesseract
import re

# Page settings
st.set_page_config(page_title="Reportslelo", layout="centered")

st.title("ЁЯз╛ Reportslelo - Lab Report Summary Generator")
st.subheader("Harish Choudhary Clinic ЁЯУЮ 8209558359")

# Upload image
uploaded_file = st.file_uploader("рдЕрдкрдиреА рд▓реИрдм рд░рд┐рдкреЛрд░реНрдЯ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ (рдлреЛрдЯреЛ рдпрд╛ рд╕реНрдХреИрди рдХреА рдЧрдИ)", type=["jpg", "jpeg", "png"])

def generate_summary(text):
    summary_lines = []

    # Patient name detect
    name_match = re.search(r'(Name|рдирд╛рдо)[:\s\-]+([A-Za-z\s]+)', text)
    if name_match:
        name = name_match.group(2).strip()
        summary_lines.append(f"рдкреНрд░рд┐рдп {name}, рдЖрдкрдХреА рд▓реИрдм рд░рд┐рдкреЛрд░реНрдЯ рдирд┐рдореНрдирд▓рд┐рдЦрд┐рдд рд╣реИ:\n")
    else:
        summary_lines.append("рдкреНрд░рд┐рдп рдорд░реАрдЬ, рдЖрдкрдХреА рд▓реИрдм рд░рд┐рдкреЛрд░реНрдЯ рдирд┐рдореНрдирд▓рд┐рдЦрд┐рдд рд╣реИ:\n")

    explained_tests = 0

    # ESR detection
    esr_match = re.search(r'ESR[:\s\-]+([\d.]+)', text, re.IGNORECASE)
    if esr_match:
        value = float(esr_match.group(1))
        if value <= 20:
            summary_lines.append(f"ЁЯСЙ ESR: {value} mm/hr (рд╕рд╛рдорд╛рдиреНрдп)\nESR рдХреА рд╕рд╛рдорд╛рдиреНрдп рд╕реАрдорд╛ 0тАУ20 mm/hr рд╣реЛрддреА рд╣реИред рдШрдмрд░рд╛рдиреЗ рдХреА рдХреЛрдИ рдмрд╛рдд рдирд╣реАрдВ рд╣реИред")
        else:
            summary_lines.append(f"ЁЯСЙ ESR: {value} mm/hr (рдереЛрдбрд╝рд╛ рдмрдврд╝рд╛ рд╣реБрдЖ)\nESR рд╕рд╛рдорд╛рдиреНрдп рд╕реЗ рдЕрдзрд┐рдХ рд╣реИ, рдпрд╣ рд╕реВрдЬрди рдпрд╛ рд╕рдВрдХреНрд░рдордг рдХрд╛ рд╕рдВрдХреЗрдд рд╣реЛ рд╕рдХрддрд╛ рд╣реИред рдбреЙрдХреНрдЯрд░ рд╕реЗ рд╕рд▓рд╛рд╣ рд▓реЗрдВред")
        explained_tests += 1

    # Hemoglobin detection
    hb_match = re.search(r'Hemoglobin[:\s\-]+([\d.]+)', text, re.IGNORECASE)
    if hb_match:
        value = float(hb_match.group(1))
        if value >= 13:
            summary_lines.append(f"\nЁЯСЙ рд╣реАрдореЛрдЧреНрд▓реЛрдмрд┐рди: {value} g/dL (рд╕рд╛рдорд╛рдиреНрдп)\nрд╣реАрдореЛрдЧреНрд▓реЛрдмрд┐рди рдХреА рд╕рд╛рдорд╛рдиреНрдп рд╕реАрдорд╛ рдкреБрд░реБрд╖реЛрдВ рдХреЗ рд▓рд┐рдП 13тАУ17 g/dL рд╣реЛрддреА рд╣реИред")
        else:
            summary_lines.append(f"\nЁЯСЙ рд╣реАрдореЛрдЧреНрд▓реЛрдмрд┐рди: {value} g/dL (рдХрдо)\nрд╣реАрдореЛрдЧреНрд▓реЛрдмрд┐рди рдХрдо рд╣реИред рдпрд╣ рдПрдиреАрдорд┐рдпрд╛ рдпрд╛ рдХрдордЬреЛрд░реА рдХрд╛ рдХрд╛рд░рдг рд╣реЛ рд╕рдХрддрд╛ рд╣реИред рдбреЙрдХреНрдЯрд░ рд╕реЗ рдорд┐рд▓реЗрдВред")
        explained_tests += 1

    # Sugar detection
    sugar_match = re.search(r'Sugar[:\s\-]+([\d.]+)', text, re.IGNORECASE)
    if sugar_match:
        value = float(sugar_match.group(1))
        if value <= 140:
            summary_lines.append(f"\nЁЯСЙ рдмреНрд▓рдб рд╢реБрдЧрд░: {value} mg/dL (рд╕рд╛рдорд╛рдиреНрдп)\nрд╢реБрдЧрд░ рд╕рд╛рдорд╛рдиреНрдп рд╕реАрдорд╛ рдореЗрдВ рд╣реИред")
        else:
            summary_lines.append(f"\nЁЯСЙ рдмреНрд▓рдб рд╢реБрдЧрд░: {value} mg/dL (рдКрдВрдЪрд╛)\nрд╢реБрдЧрд░ рдмрдврд╝рд╛ рд╣реБрдЖ рд╣реИ, рдпрд╣ рдбрд╛рдпрдмрд┐рдЯреАрдЬ рдХрд╛ рд╕рдВрдХреЗрдд рд╣реЛ рд╕рдХрддрд╛ рд╣реИред рдбреЙрдХреНрдЯрд░ рд╕реЗ рдорд┐рд▓реЗрдВред")
        explained_tests += 1

    # If nothing found
    if explained_tests == 0:
        summary_lines.append("рдЖрдкрдХреА рд░рд┐рдкреЛрд░реНрдЯ рд╕рд╛рдорд╛рдиреНрдп рдкреНрд░рддреАрдд рд╣реЛрддреА рд╣реИред рдХреЛрдИ рдЪрд┐рдВрддрд╛ рдХреА рдмрд╛рдд рдирд╣реАрдВ рд╣реИред рдпрджрд┐ рдХреБрдЫ рдЕрд╕рд╛рдорд╛рдиреНрдп рд▓рдЧреЗ рддреЛ рдбреЙрдХреНрдЯрд░ рд╕реЗ рд╕рд▓рд╛рд╣ рд▓реЗрдВред")

    summary_lines.append("\n\n- Harish Choudhary Clinic\nЁЯУЮ 8209558359")

    return "\n".join(summary_lines)

if uploaded_file is not None:
    image = Image.open(uploaded_file)
    st.image(image, caption='рдЕрдкрд▓реЛрдб рдХреА рдЧрдИ рд░рд┐рдкреЛрд░реНрдЯ', use_container_width=True)

    with st.spinner("рд░рд┐рдкреЛрд░реНрдЯ рдкрдврд╝реА рдЬрд╛ рд░рд╣реА рд╣реИ..."):
        extracted_text = pytesseract.image_to_string(image, lang='eng')
        st.subheader("ЁЯУД Extracted Report Text:")
        st.text(extracted_text)

        st.subheader("ЁЯУй Patient рдХреЛ рднреЗрдЬрдиреЗ рдпреЛрдЧреНрдп рд╕рд░рд▓ рд╣рд┐рдВрджреА рд╕рд╛рд░рд╛рдВрд╢:")
        summary = generate_summary(extracted_text)
        st.text_area("SMS Preview", summary, height=300)
